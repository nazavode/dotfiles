################################################################################
# Common stuff
################################################################################

EDITOR="vim"

# dot executable (for PyCharm PlantUML plugin)
if which dot > /dev/null 2>&1; then
  GRAPHVIZ_DOT="$(which dot)"
fi

# Locale enforcing to be consistent across systems
LC_ALL=en_US.UTF-8
LANG=en_US.UTF-8
LANGUAGE=en_US.UTF-8

################################################################################
# Detect OS
################################################################################

OS="$(uname 2> /dev/null)"

################################################################################
# Linux specific stuff
################################################################################

function _setup_env_cluster {
  export CINECA=1
  export CINECA_CLUSTER="$(hostname -f | cut -d '.' -f 2)"
  module purge
  module list

  function brewup {
    export HOMEBREW_TEMP="/scratch/cibo/${USER}/.linuxbrew/tmp"
    # export HOMEBREW_CACHE="/scratch/cibo/${USER}/.linuxbrew/cache"
    PATH="${HOME}/.linuxbrew/Homebrew/Library/Homebrew/vendor/portable-ruby/2.3.3/bin:$PATH"
    PATH="${HOME}/.linuxbrew/bin:$PATH"
    MANPATH="${HOME}/.linuxbrew/share/man:$MANPATH"
    INFOPATH="${HOME}/.linuxbrew/share/info:$INFOPATH"
    ## brew-installed python packages
    # export PATH="${HOME}/.linuxbrew/opt/python/libexec/bin:$PATH"
  }
}

function _setup_env_laptop {
  
  # Linuxbrew
  if [[ -d "$HOME/.linuxbrew" ]]; then
    PATH="$HOME/.linuxbrew/bin:$PATH"
    MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"
    INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"
    XDG_DATA_DIRS="$HOME/.linuxbrew/share:$XDG_DATA_DIRS"
  fi

  # Manually installed applications, not handled by a package manager
  LINUX_APPS_DIR="$HOME/Apps/bin"
  if [[ -d "$LINUX_APPS_DIR" ]]; then
    PATH="$LINUX_APPS_DIR:$PATH"
  fi

}

if [[ "$OS" = "Linux" ]]; then
  # Go
  LINUX_GOPATH="$HOME/go"
  if [[ -d "$LINUX_GOPATH" ]]; then
    GOPATH="$LINUX_GOPATH"
    GOBIN="$GOPATH/bin"
    PATH="$GOBIN:$PATH"
  fi

  # System specific stuff
  if [[ -d /cineca/ ]]; then
    _setup_env_cluster
  else
    _setup_env_laptop
  fi
fi

################################################################################
# MacOSX specific stuff
################################################################################

if [[ "$OS" = "Darwin" ]]; then
  MACOSX_APPS_DIR="$HOME/Documents/Apps/bin"
  MACOSX_GOPATH="$HOME/Documents/Hacking/go"

  # GNU coreutils provided by brew, overwrite Apple counterparts
  if [[ -d /usr/local/opt/coreutils/libexec/ ]]; then
    PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
    MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
  fi

  # Manually installed applications, not handled by a package manager
  if [[ -d "$MACOSX_APPS_DIR" ]]; then
    PATH="$MACOSX_APPS_DIR:$PATH"
  fi

  # Ruby gems - user local installation
  if [[ -d "${HOME}/.gem/ruby/2.0.0/bin" ]]; then
    PATH="${HOME}/.gem/ruby/2.0.0/bin:${PATH}"
  fi

  # Golang
  if [[ -d "$MACOSX_GOPATH" ]]; then
    GOPATH="$MACOSX_GOPATH"
    GOBIN="$GOPATH/bin"
    # Extra 'libexec' path needed by brewed go
    PATH="/usr/local/opt/go/libexec/bin:$GOBIN:$PATH"
  fi
fi

################################################################################
# Exports
################################################################################

export EDITOR
export PATH
export MANPATH
export INFOPATH
export XDG_DATA_DIRS
export LC_ALL
export LANG
export LANGUAGE
export GRAPHVIZ_DOT
export GOPATH
export GOBIN

################################################################################
# Cleanup
################################################################################

unset OS

################################################################################
# Setup ls for different systems
################################################################################

# Colors definition: LS_COLORS is used by GNU, LSCOLORS by Apple/BSD
# Solarized (https://github.com/seebi/dircolors-solarized/)
LS_COLORS='no=00:fi=00:di=01;31:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'
LSCOLORS='BxBxhxDxfxhxhxhxhxcxcx'

# Detect which `ls` flavor is in use, we need to use different flags
# for GNU ls and Apple/BSD ls.
# 1. Tell ls to use colors, fix found here:
#    https://github.com/mathiasbynens/dotfiles/pull/451
# 2. Tell GNU ls to not use quotes for file names containing spaces (-N)
#    since it is the default for the vanilla distro of coreutils
#    (and it is pretty annoying)
if ls --color > /dev/null 2>&1; then
  # GNU
  LSFLAGS="--color -N"
else
  # Apple/BSD
  LSFLAGS="-G"
fi

################################################################################
# Aliases
# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
################################################################################

alias ls="ls ${LSFLAGS}"
alias la="ls -ltrha ${LSFLAGS}"
alias ll="ls -ltrh ${LSFLAGS}"
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
# Detect if we are on ubuntu and set the 'xopen'
# console opener
if xdg-open --help > /dev/null 2>&1; then
    alias xopen='xdg-open'
fi
